#########################
##### Macros Config #####
#########################

 [delayed_gcode clear_display]
initial_duration: 0.
gcode:
  M117

######################################################################
# Start Print Macro
######################################################################

[gcode_macro START_PRINT]
gcode:
    _ENABLE_FS
    BED_MESH_PROFILE LOAD=default
    #Get Printer built volume dimensions
    {% set X_MAX = printer.toolhead.axis_maximum.x|default(100)|float %}
    {% set Y_MAX = printer.toolhead.axis_maximum.y|default(100)|float %}
    {% set Z_MAX = printer.toolhead.axis_maximum.z|default(100)|float %}

    #Get Nozzle diameter and filament width for conditioning
    {% set NOZZLE = printer.extruder.nozzle_diameter|default(0.4)|float %}
    {% set FILADIA = printer.extruder.filament_diameter|default(1.75)|float %}

    #Set Start coordinates of priming lines
    {% set X_START = 15.0|default(10.0)|float %}
    {% set Y_START = -1.0|default(20.0)|float %}

    #Calculate Primer line extrusion volume and filament length
    {% set PRIMER_WIDTH = 0.75 * NOZZLE %}
    {% set PRIMER_HEIGHT = 0.50 * NOZZLE %}
    {% set PRIMER_SECT = PRIMER_WIDTH * PRIMER_HEIGHT %}
    {% set PRIMER_VOL = PRIMER_SECT * (X_MAX - 3 * X_START) %}
    {% set FILA_SECT = 3.1415 * ( FILADIA / 2.0)**2 %}
    {% set FILA_LENGTH = 1.55 * PRIMER_VOL / FILA_SECT %}

    #Get Bed and Extruder temperature from Slicer GCode
    {% set BED_TEMP = params.BED_TEMP|default(85)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(235)|float %}

    M104 S{EXTRUDER_TEMP} T0 ; set extruder temp
    M140 S{BED_TEMP} ; set bed temp
    G28 ; home all axes
    G1 Z40 F1000 ; move nozzle up 40mm
    PRESENT ; park toolhead
    M190 S{BED_TEMP} ; wait for bed temp
    M109 S{EXTRUDER_TEMP} T0 ; wait for extruder temp

    # #Precondition extruder
    # G92 E0     
    # G1 X{X_START} Y{Y_START} Z{PRIMER_HEIGHT} F5000.0 ; Move to start position
    # G1 X{X_MAX - 2 * X_START} Y{Y_START} Z{PRIMER_HEIGHT} F1500.0 E20 ; Draw the first line
    # G1 X{X_MAX - 2 * X_START} Y{Y_START + PRIMER_WIDTH} Z{PRIMER_HEIGHT} 
    # G1 X{X_START} Y{Y_START + PRIMER_WIDTH} Z{PRIMER_HEIGHT} F1500.0 E20 ; Draw the second line
    # G92 E0 ; Reset Extruder
    # # G1 E-1 F1000 ; Retract filament
    # G1 Z2.0 F600 ; Move Z Axis up

######################################################################
# End Print Macro
######################################################################

[gcode_macro END_PRINT]
gcode:
    G91 ;relative positioning
    G1 E-2 F2700 ;retract filament
    G1 X-2 Y-2 F3000 ;move nozzle away from print
    G1 Z40 F1000 ; move nozzle up 40mm
    G90 ;absolute positioning
    PRESENT

    M140 S0 ; turn off heatbed
    M104 S0 ; turn off hotend
    M106 S0; turn off fan
    M84 X Y E     ; disable motors

######################################################################
# Cencel Print Macro
######################################################################

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    CLEAR_PAUSE ; clear pause state
    END_PRINT ; end print
    BASE_CANCEL_PRINT ; cancel print

######################################################################
# PAUSE Macro
######################################################################

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    {% set e = 3|float %} 
    SAVE_GCODE_STATE NAME=PAUSE_state ; save current state
    BASE_PAUSE ; pause print
        
    {%if printer.extruder.can_extrude %} ; retract filament
        G91 ; relative positioning
        G1 E-{e} F2100 #negative for retraction
        G90 ; absolute positioning
    {% endif %} 
    G1 Z40 F1000 ; move nozzle up 40mm
    PARK ; park toolhead

######################################################################
# RESUME Macro
######################################################################

[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
    {% set e = 3|float %} ; set retract distance
    {%if printer.extruder.can_extrude %} ; prime filament
        G91 ; relative positioning
        G1 E{e} F2100  #we really want a positive extrude here
        G90 ; absolute positioning
    {% endif %}
    RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1 ; restore state
    _ENABLE_FS ; enable filament sensor
    BASE_RESUME ; resume print

######################################################################
# PARK Position Macro
######################################################################

[gcode_macro PARK]
gcode:
    {% set z_max = printer.toolhead.axis_maximum.z %} ; get max z position
    {% set z_pos = printer.toolhead.position.z %} ; get current z position
    {% set y_max = printer.toolhead.axis_maximum.y %} ; get max y position
    {% set y_min = printer.toolhead.axis_minimum.y %} ; get min y position
    {% set x_min = printer.toolhead.axis_minimum.x %} ; get min x position
    {% set travel_speed = printer.toolhead.max_velocity * 0.7 * 40 %} ; set travel speed
    {% set z_travel_speed = printer.configfile.settings.printer.max_z_velocity * 50 %} ; set z travel speed
    {% set park_height = z_pos %} ; set park height

    {% set x = params.X|default(x_min + 5) %} ; set park x position
    {% set y = params.Y|default(y_min + 5) %} ; set park y position
    {% set z = params.Z|default(park_height)|float %} #edit to your park position
    
    {% if z_pos > (z_max ) %}
      M117 Z {z_pos} Cant raise any higher ; display message
      UPDATE_DELAYED_GCODE ID=clear_display DURATION=10 ; clear message
    {% elif z_pos > park_height + 0.04 %} ; if z is above park height
      #M117 Z {z_pos} goto { (( z_max - 10 - z_pos) * 0.5 ) + z_pos }
      UPDATE_DELAYED_GCODE ID=clear_display DURATION=10 ; clear message
      G1 Z { (( z_max - 10 - z_pos) * 0.5 ) + z_pos } F600 ; raise nozzle
    {% elif z_pos < park_height -0.04 %} ; if z is below park height
      #M117 Z {z_pos} goto {park_height}
      UPDATE_DELAYED_GCODE ID=clear_display DURATION=10 ; clear message
      G1 Z {z} F{z_travel_speed} ; lower nozzle
    {% else %} 
      M117 I think we are already at park height ; display message
      UPDATE_DELAYED_GCODE ID=clear_display DURATION=10 ; clear message
    {% endif %} 
    G1 Y {y} X {x} F{travel_speed} ; move to park position

######################################################################
# PRESENT Macro
######################################################################

[gcode_macro PRESENT]
gcode:
    {% set my_y = printer.toolhead.axis_maximum.y - 5 %}
    PARK Y={my_y} ; move to present position

######################################################################
# LOAD FILAMENT Macro
######################################################################

[gcode_macro LOAD_FILAMENT]
gcode:
    _DISABLE_FS ; disable filament sensor
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity %} ; get max extrude velocity
    START_BEEP ; start beep
    M117 Loading Filament... ; display message
    SAVE_GCODE_STATE NAME=load_state ; save current state
    {% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %} ; if temp is defined or can't extrude
      M117 Heating... ; display message
      # Heat up hotend to provided temp or 220 as default as that should work OK with most filaments.
      M104 S{params.TEMP|default(220, true)} ; set hotend temp
      TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)} TARGET=0.95 ; wait for hotend temp
    {% endif %}
    START_BEEP ; start beep
    G4 P3000 ; wait 3 seconds
    G91 ; relative positioning
    G92 E0.0 ; reset extruder
    G1 E20 F{max_velocity * 0.4} ; extrude 30mm 
    G1 E40 F{max_velocity * 0.2} ; extrude 15mm
    G90 ; absolute positioning
    G92 E0.0 ; reset extruder
    M400 ; wait for moves to complete
    M117 Load Complete ; display message
    END_BEEP ; end beep
    RESTORE_GCODE_STATE NAME=load_state ; restore state

######################################################################
# ULOAD FILAMENT Macro
######################################################################

[gcode_macro UNLOAD_FILAMENT]
gcode:
    _DISABLE_FS
    UPDATE_DELAYED_GCODE ID=clear_display DURATION=10 ; clear message
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity %}
    START_BEEP
    M117 Unloading Filament...
    UPDATE_DELAYED_GCODE ID=clear_display DURATION=10 ; clear message
    {% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
      M117 Heating...
      # Heat up hotend to provided temp or 220 as default as that should work OK with most filaments.
      M104 S{params.TEMP|default(220, true)}
      TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
    {% endif %}
    SAVE_GCODE_STATE NAME=unload_state
    G91
    START_BEEP
    G92 E0
    G1 E10 F300
    G1 E-15 F{max_velocity} # fast-unload
    G1 E-35 F{max_velocity * 0.6} 
    END_BEEP
    RESTORE_GCODE_STATE NAME=unload_state

######################################################################
# PURGE FILAMENT Macro
######################################################################

[gcode_macro PURGE]
gcode:
    {% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
      M117 Heating...
      # Heat up hotend to provided temp or 220 as default as that should work OK with most filaments.
      M104 S{params.TEMP|default(220, true)}
      TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
    {% endif %}
    G92 E0 ;zero the extruded length
    G1 F200 E30 ;extrude 3mm of feed stock
    G92 E0 ;zero the extruded length


######################################################################
# Filament Runout Sensor
######################################################################

# [gcode_macro F_CONSUMED]
# variable_filament_consumed: 0
# variable_filament_lenght: 320   # length between the sensor and extruder
# gcode:
#     # save current filament consumption
#     SET_GCODE_VARIABLE MACRO=F_CONSUMED VARIABLE=filament_consumed VALUE={printer.print_stats.filament_used}
#     # start checking filament consumption
#     UPDATE_DELAYED_GCODE ID=DELAY_M600 DURATION=1

# [delayed_gcode DELAY_M600]
# gcode:
#     # use set for easier reading
#     {% set consumed=printer["gcode_macro F_CONSUMED"].filament_consumed %}
#     {% set length=printer["gcode_macro F_CONSUMED"].filament_lenght %}
#     # check if predetermine length is reached
#     {% if printer.print_stats.filament_used|float <= (consumed|float + length|float) %}
#     # start looping this script every second
#     UPDATE_DELAYED_GCODE ID=DELAY_M600 DURATION=1
#     {% else %}
#     M600
#     {% endif %}

######################################################################
# Filament Change M600 Macros
######################################################################

[gcode_macro M600]
gcode:
    _DISABLE_FS
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    PARK
    UNLOAD_FILAMENT
    PLAY_DOUBLE_FEEDBACK_SOUND
    PLAY_DOUBLE_FEEDBACK_SOUND
    RESTORE_GCODE_STATE NAME=M600_state

######################################################################
# Filament Sensor Macros
######################################################################

[gcode_macro _DISABLE_FS]
gcode:
    SET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=0

[gcode_macro _ENABLE_FS]
gcode:
    SET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=1

######################################################################
# Buzzer Macros
######################################################################

[gcode_macro M300]
gcode:
    # Use a default 1kHz tone if S is omitted.
    {% set S = params.S|default(1000)|int %}
    # Use a 10ms duration is P is omitted.
    {% set P = params.P|default(100)|int %}
    SET_PIN PIN=BEEPER_pin VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
    G4 P{P}
    SET_PIN PIN=BEEPER_pin VALUE=0

[gcode_macro START_BEEP]
gcode:
    M300 S1000 P500 ; chirp to indicate starting to print

[gcode_macro END_BEEP]
gcode:
    M300 S440 P200 ; Make Print Completed Tones
    M300 S660 P250
    M300 S880 P300

[gcode_macro PLAY_SINGLE_FEEDBACK_SOUND]
gcode:
    M300 S100 P100
    M300 S1 P100

[gcode_macro PLAY_DOUBLE_FEEDBACK_SOUND]
gcode:
    M300 S100 P100
    M300 S1 P100
    M300 S100 P100
    M300 S1 P100

[gcode_macro PLAY_LONG_FEEDBACK_SOUND]
gcode:
    M300 S100 P1000
    M300 S1 P100

[gcode_macro PLAY_ALARM_2]
gcode:
    M300 P190 S698
    M300 P52 S0
    M300 P194 S880
    M300 P48 S0
    M300 P211 S1319
    M300 P31 S0
    M300 P158 S1047
    M300 P84 S294
    M300 P91 S1175
    M300 P130 S392
    M300 P117 S440
    M300 P211 S494
    M300 P302 S587

[gcode_macro PLAY_TIMER]
gcode:
    M300 P112 S988
    M300 P147 S1480
    M300 P54 S988
    M300 P56 S988
    M300 P54 S1480
    M300 P147 S1480
    M300 P112 S988
    M300 P118 S1480
    M300 P194 S0
    M300 P112 S988
    M300 P147 S1480
    M300 P54 S988
    M300 P56 S988
    M300 P54 S1480
    M300 P147 S1480
    M300 P112 S988
    M300 P118 S1480
    M300 P372 S0
    M300 P1 S1480



####################################
##### M205 Support for Klipper #####
####################################

[gcode_macro M205]
gcode:
  {% if 'X' in params %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={params.X}
  {% elif 'Y' in params %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={params.Y}
  {% endif %}

#######################
##### END OF FILE #####
#######################